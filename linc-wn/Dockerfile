FROM ubuntu:20.04 as builder

# This Docker image builds the dependencies for the Rapthor pipeline.
# It lives on the head of its dependencies.

# Install all build-time dependencies
RUN export DEBIAN_FRONTEND=noninteractive && \ 
    apt-get update && \
    apt-get install -y \
        bison \
        build-essential \
        casacore-data \
        casacore-dev \
        cmake \
        flex \
        gfortran \ 
        git \
        libblas-dev \
        libboost-date-time-dev \
        libboost-filesystem-dev \
        libboost-numpy-dev \
        libboost-program-options-dev \
        libboost-python-dev \
        libboost-system-dev \
        libboost-test-dev \
        libcfitsio-dev \
        libfftw3-dev \
        libgsl-dev \
        libgtkmm-3.0-dev \
        libhdf5-serial-dev \
        liblapack-dev \
        liblua5.3-dev \
        libncurses5-dev \
        libpng-dev \
        libpython3-dev \
        pkg-config \
        python3 \
        python3-casacore \
        python3-numpy \
        wcslib-dev \
        wget && \
    mkdir -p /src

WORKDIR /src

# Build portable binaries by default
ARG PORTABLE=TRUE

ARG LOFARSTMAN_VERSION=master
RUN git clone --depth 1 --branch ${LOFARSTMAN_VERSION} \
        https://github.com/lofar-astron/LofarStMan && \
    mkdir LofarStMan/build && \
    cd LofarStMan/build && \
    cmake .. -DPORTABLE=${PORTABLE} && \
    make install -j`nproc`

ARG DYSCO_VERSION=master
RUN git clone --depth 1 --branch ${DYSCO_VERSION} \
        https://github.com/aroffringa/dysco.git && \
    mkdir dysco/build && \
    cd dysco/build && \
    cmake .. -DPORTABLE=${PORTABLE} && \
    make install -j`nproc`
    
ARG IDG_VERSION=master
# IDG doesn't work with --depth 1, because it needs all branches to
# determine its version :-(
RUN git clone --branch ${IDG_VERSION} \
        https://git.astron.nl/RD/idg.git && \
    mkdir idg/build && \
    cd idg/build && \
    cmake .. && \
    make install -j`nproc`

ARG AOFLAGGER_VERSION=master
RUN git clone --branch ${AOFLAGGER_VERSION} \
        https://gitlab.com/aroffringa/aoflagger.git && \
    mkdir aoflagger/build && \
    cd aoflagger && git fetch && git checkout bfb3978e734911457555ac244d255f4b4ce6df68 && \
    cd build && \
    cmake .. -DPORTABLE=${PORTABLE} && \
    make install -j`nproc`

ARG LOFARBEAM_VERSION=master
RUN git clone  --depth 1 --branch ${LOFARBEAM_VERSION} \
        https://github.com/lofar-astron/LOFARBeam.git && \
    mkdir LOFARBeam/build && \
    cd LOFARBeam/build && \
    cmake .. && \
    make install -j`nproc`

ARG EVERYBEAM_VERSION=master
RUN git clone --depth 1  --branch ${EVERYBEAM_VERSION} \
        https://git.astron.nl/RD/EveryBeam.git && \
    mkdir EveryBeam/build && \
    cd EveryBeam/build && \
    cmake .. && \
    make install -j`nproc`

ARG SAGECAL_VERSION=master
RUN git clone --depth 1 --branch ${SAGECAL_VERSION} \
        https://github.com/nlesc-dirac/sagecal && \
    mkdir sagecal/build && \
    cd sagecal/build && \
    cmake .. -DLIB_ONLY=1 && \
    make install -j`nproc`

ARG DP3_VERSION=master
RUN git clone --depth 1 --branch ${DP3_VERSION} \
        https://git.astron.nl/RD/DP3.git && \
    mkdir DP3/build && \
    cd DP3/build && \
    cmake .. -DPORTABLE=${PORTABLE} -DLIBDIRAC_PREFIX=/usr/local/ && \
    make install -j`nproc`

ARG WSCLEAN_VERSION=master
RUN git clone --depth 1 --branch ${WSCLEAN_VERSION} \
        https://gitlab.com/aroffringa/wsclean.git && \
    mkdir wsclean/build && \
    cd wsclean/build && \
    cmake .. -DPORTABLE=${PORTABLE} && \
    make install -j`nproc`

# Do not use `pip` from the Debian repository, but fetch it from PyPA.
# This way, we are sure that the latest versions of `pip`, `setuptools`, and
# `wheel` are installed in /usr/local, the only directory we're going to copy
# over to the next build stage.
RUN wget https://bootstrap.pypa.io/get-pip.py && \
    python3 get-pip.py

# Install required python packages
RUN python3 -m pip install --no-cache-dir --upgrade \
    cwl-runner \
    cwltool

#---------------------------------------------------------------------------
# The image will now be rebuilt without adding the sources, in order to
# reduce the size of the image.
#---------------------------------------------------------------------------
FROM ubuntu:20.04 as runner

COPY --from=builder /usr/local /usr/local
RUN chmod +rx /usr/local/bin/*

SHELL ["/bin/bash", "-c"]

# Set default versions. Can be overridden from the command-line
ARG LOFARSTMAN_VERSION=master
ARG DYSCO_VERSION=master
ARG IDG_VERSION=master
ARG AOFLAGGER_VERSION=master
ARG LOFARBEAM_VERSION=master
ARG EVERYBEAM_VERSION=master
ARG DP3_VERSION=master
ARG WSCLEAN_VERSION=master
ARG PREFACTOR_VERSION=master

# Add version information to the metadata of the image
LABEL \
    nl.astron.prefactor.lofarstman.version=${LOFARSTMAN_VERSION} \
    nl.astron.prefactor.dysco.version=${DYSCO_VERSION} \
    nl.astron.prefactor.idg.version=${IDG_VERSION} \
    nl.astron.prefactor.aoflagger.version=${AOFLAGGER_VERSION} \
    nl.astron.prefactor.lofarbeam.version=${LOFARBEAM_VERSION} \
    nl.astron.prefactor.everybeam.version=${EVERYBEAM_VERSION} \
    nl.astron.prefactor.dp3.version=${DP3_VERSION} \
    nl.astron.prefactor.wsclean.version=${WSCLEAN_VERSION}

# Only install run-time required packages 
RUN export DEBIAN_FRONTEND=noninteractive && \
    apt-get update && \
    apt-get install -y \
        casacore-tools \
        gcc \
        git \
        libatkmm-1.6-1v5 \
        libboost-date-time1.71.0 \
        libboost-filesystem1.71.0 \
        libboost-program-options1.71.0 \
        libboost-python1.71.0 \
        libcairomm-1.0-1v5 \
        libcasa-casa4 \
        libcasa-fits4 \
        libcasa-measures4 \
        libcasa-ms4 \
        libcasa-python3-4 \
        libcasa-scimath4 \
        libcasa-tables4 \
        libcfitsio8 \
        libfftw3-double3 \
        libfftw3-single3 \
        libglibmm-2.4-1v5 \
        libgomp1 \
        libgsl23 \
        libgtkmm-3.0-1v5 \
        libhdf5-103 \
        libhdf5-cpp-103 \
        liblapack3 \
        liblua5.3-0 \
        libpangomm-1.4-1v5 \
        libpng16-16 \
        libpython3.8 \
        libpython3-dev \
        libsigc++-2.0-0v5 \
        libstdc++6 \
        nodejs \
        python3 \
        python3-casacore \
        python3-distutils \
        wget && \
    rm -rf /var/lib/apt/lists/*

# Install WSRT Measures (extra casacore data)
# Note: The file on the ftp site is updated daily. When warnings regarding leap
# seconds appear, ignore them or regenerate the docker image.
RUN wget -q -O /WSRT_Measures.ztar \
        ftp://ftp.astron.nl/outgoing/Measures/WSRT_Measures.ztar && \
    cd /var/lib/casacore/data && \
    tar xfz /WSRT_Measures.ztar && \
    rm /WSRT_Measures.ztar

ENV PREFACTOR_DATA_ROOT=/usr/local/share/prefactor \
    PYTHONPATH=/usr/local/bin

# Install Prefactor CWL
# Install current version of Prefactor CWL. By adding this to the base image
# we can speed up the build of the final image, because all of Prefactor's
# dependencies will have been installed already and (probably) don't need to
# be updated.
ARG PREFACTOR_VERSION=master
RUN git clone --depth 1 --branch ${PREFACTOR_VERSION} \
        https://git.astron.nl/eosc/prefactor3-cwl.git /tmp/prefactor && \
        python3 -m pip install --no-cache-dir --upgrade /tmp/prefactor && \
        rm -rf /tmp/prefactor
